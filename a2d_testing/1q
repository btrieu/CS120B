/*	Author: Brandon Trieu btrie004@ucr.edu
 *  Partner(s) Name: 
 *	Lab Section: 023
 *	Assignment: Lab #6  Exercise #3
 *	Exercise Description: PA0 increments up to 9, PA1 decrements down to 0 (start at 7), output on C. Now with timers!!
 *	I acknowledge all content contained herein, excluding template or example
 *	code, is my own original work.
 */
#include <avr/io.h>
#include "timer.h"
#ifdef _SIMULATE_
#include "simAVRHeader.h"
#endif

void ADC_init() {
	ADCSRA |= (1 << ADEN)/* | (1 << ADSC) | (1 << ADATE)*/;
}

unsigned char vHzt = 0;
short currADC;

enum States {Start, RunADC, ButtonPress}state;

void Tick() {
	switch(state) {
		case Start:
			vHzt = 0;
			state = RunADC;
			break;
		case RunADC:
			if ((~PINA & 0x04) == 0x04) { state = ButtonPress; }
			else { state = RunADC; }
			break;
		case ButtonPress:
			if ((~PINA & 0x04) == 0x04) { state = ButtonPress; }
			else { state = RunADC; }
			break;
	}
	switch(state) {
		case Start:
			break;
		case RunADC:
			ADCSRA |= 0x40;
			currADC = ADC;
			PORTB = currADC;
			PORTD = currADC >> 8;
			break;
		case ButtonPress:
			ADMUX = 0x01;
			/*if (vHzt == 0) { vHzt = 1; ADMUX &= 0x01; }
			else { vHzt = 0; ADMUX &= 0x00; }*/
			break;
	}
}

int main(void) {
    /* Insert DDR and PORT initializations */
	DDRA = 0x00; PORTA = 0xFF;
	DDRB = 0xFF; PORTB = 0x00;
	DDRD = 0xFF; PORTD = 0x00;
    	state = Start;
    /* Insert your solution below */
	ADC_init();
	TimerSet(500);
	TimerOn();
    while (1) {
    	Tick();
	while (!TimerFlag);
	TimerFlag = 0;
    }
    return 1;
}
